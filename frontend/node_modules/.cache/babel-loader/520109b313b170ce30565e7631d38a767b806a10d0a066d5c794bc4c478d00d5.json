{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{toast}from'react-toastify';import{uploadFlowConfig}from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FlowEditor=()=>{const navigate=useNavigate();const[file,setFile]=useState(null);const[loading,setLoading]=useState(false);const[flowDefinition,setFlowDefinition]=useState('');const[manualInput,setManualInput]=useState(false);const[formData,setFormData]=useState({flowName:'',refreshInterval:120,databases:{aws:{host:'',user:'',password:'',database:''},oracle:{host:'',user:'',password:'',service:''}},flowDefinition:{overall:'',subStages:{}},stageMappings:{aws:{},onPrem:{}}});const handleFileChange=e=>{setFile(e.target.files[0]);};const handleSubmit=async e=>{e.preventDefault();try{setLoading(true);if(manualInput){// Submit manual input\nconst response=await uploadFlowConfig(formData);if(response.status==='success'){toast.success(`Flow ${formData.flowName} created successfully`);navigate(`/flows/${formData.flowName}`);}else{toast.error('Failed to create flow configuration');}}else if(file){// Submit file upload\nconst response=await uploadFlowConfig(file);if(response.status==='success'){toast.success(response.message);navigate('/');}else{toast.error('Failed to upload configuration');}}else{toast.warning('Please select a file or provide manual input');}}catch(error){toast.error(`Error: ${error.message}`);}finally{setLoading(false);}};const handleFormChange=function(e,section){let subsection=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;const{name,value}=e.target;if(subsection){setFormData({...formData,[section]:{...formData[section],[subsection]:{...formData[section][subsection],[name]:value}}});}else{setFormData({...formData,[section]:{...formData[section],[name]:value}});}};const handleFlowDefinitionChange=e=>{setFlowDefinition(e.target.value);// Try to parse the flow definition\ntry{const lines=e.target.value.split('\\n');let overall='';const subStages={AWS:{},'On-PREM':{}};let currentSection=null;let currentCategory=null;for(const line of lines){const trimmedLine=line.trim();if(!trimmedLine)continue;if(trimmedLine.toLowerCase().startsWith('overall flow')){currentSection='overall';}else if(trimmedLine.toLowerCase().startsWith('sub-stages')){currentSection='subStages';}else if(currentSection==='overall'&&!overall){overall=trimmedLine;}else if(currentSection==='subStages'){if(trimmedLine==='AWS'||trimmedLine==='On-PREM'){currentCategory=trimmedLine;}else if(currentCategory&&trimmedLine==='{'){// Opening bracket\n}else if(currentCategory&&trimmedLine==='}'){// Closing bracket\n}else if(currentCategory){// This is a stage definition\nconst parts=trimmedLine.split('{');if(parts.length===2){const stageName=parts[0].trim();const stageContent=parts[1].replace('}','').trim();subStages[currentCategory][stageName]=stageContent;}}}}setFormData({...formData,flowDefinition:{overall,subStages}});}catch(error){console.error('Error parsing flow definition:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-4xl mx-auto p-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-6\",children:\"Create New Flow Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-4 mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:`px-4 py-2 rounded ${!manualInput?'bg-blue-500 text-white':'bg-gray-200'}`,onClick:()=>setManualInput(false),children:\"Upload Configuration File\"}),/*#__PURE__*/_jsx(\"button\",{className:`px-4 py-2 rounded ${manualInput?'bg-blue-500 text-white':'bg-gray-200'}`,onClick:()=>setManualInput(true),children:\"Manual Configuration\"})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[!manualInput?/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-2\",children:\"Upload JSON Configuration File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".json\",onChange:handleFileChange,className:\"border rounded p-2 w-full\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-2 text-sm text-gray-500\",children:\"Upload a JSON file containing the flow configuration.\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-2\",children:\"Flow Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.flowName,onChange:e=>setFormData({...formData,flowName:e.target.value}),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-2\",children:\"Refresh Interval (seconds)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:formData.refreshInterval,onChange:e=>setFormData({...formData,refreshInterval:parseInt(e.target.value)}),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-3\",children:\"Database Connections\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"AWS RDS\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Host\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"host\",value:formData.databases.aws.host,onChange:e=>handleFormChange(e,'databases','aws'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"User\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"user\",value:formData.databases.aws.user,onChange:e=>handleFormChange(e,'databases','aws'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.databases.aws.password,onChange:e=>handleFormChange(e,'databases','aws'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Database\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"database\",value:formData.databases.aws.database,onChange:e=>handleFormChange(e,'databases','aws'),className:\"border rounded p-2 w-full\",required:true})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"Oracle\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Host\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"host\",value:formData.databases.oracle.host,onChange:e=>handleFormChange(e,'databases','oracle'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"User\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"user\",value:formData.databases.oracle.user,onChange:e=>handleFormChange(e,'databases','oracle'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.databases.oracle.password,onChange:e=>handleFormChange(e,'databases','oracle'),className:\"border rounded p-2 w-full\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-1 text-sm\",children:\"Service\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"service\",value:formData.databases.oracle.service,onChange:e=>handleFormChange(e,'databases','oracle'),className:\"border rounded p-2 w-full\",required:true})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-3\",children:\"Flow Definition\"}),/*#__PURE__*/_jsx(\"label\",{className:\"block text-gray-700 mb-2\",children:\"Enter flow definition in the specified format\"}),/*#__PURE__*/_jsx(\"textarea\",{value:flowDefinition,onChange:handleFlowDefinitionChange,className:\"border rounded p-2 w-full h-64 font-mono\",placeholder:\"Overall flow AWS{Calculator_Runs->Cashflow_Generator->Translator_Runs->Intercompany_Runs} ->On-PREM{BPF->FINAL_STAGE} Sub-stages AWS\\n{\\nCalculator_Runs {\\nStage_1_1 -> Stage1_2->Stage1_3}\\n...\\n}\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold mb-3\",children:\"Stage Mappings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-4\",children:\"For each stage, provide the corresponding database identifier.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-blue-50 p-4 rounded mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"AWS Stage Mappings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"Map stage names to DAG IDs in the format: Stage_1_1: dag_id_1\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"border rounded p-2 w-full h-32 font-mono\",placeholder:\"Stage_1_1: calculator_stage_1_dag\\nStage1_2: calculator_stage_2_dag\\n...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 p-4 rounded\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold mb-2\",children:\"On-Prem Stage Mappings\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 mb-2\",children:\"Map stage names to BPF_ID and PROCESS_ID in the format: Stage5_1: 20010, 10\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"border rounded p-2 w-full h-32 font-mono\",placeholder:\"Stage5_1: 20010, 10\\nStage5_2: 20007, 10\\n...\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>navigate('/'),className:\"bg-gray-300 text-gray-800 px-4 py-2 rounded mr-2\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"bg-blue-500 text-white px-4 py-2 rounded\",disabled:loading,children:loading?'Creating...':'Create Flow Configuration'})]})]})]})]});};export default FlowEditor;","map":{"version":3,"names":["React","useState","useNavigate","toast","uploadFlowConfig","jsx","_jsx","jsxs","_jsxs","FlowEditor","navigate","file","setFile","loading","setLoading","flowDefinition","setFlowDefinition","manualInput","setManualInput","formData","setFormData","flowName","refreshInterval","databases","aws","host","user","password","database","oracle","service","overall","subStages","stageMappings","onPrem","handleFileChange","e","target","files","handleSubmit","preventDefault","response","status","success","error","message","warning","handleFormChange","section","subsection","arguments","length","undefined","name","value","handleFlowDefinitionChange","lines","split","AWS","currentSection","currentCategory","line","trimmedLine","trim","toLowerCase","startsWith","parts","stageName","stageContent","replace","console","className","children","onClick","onSubmit","type","accept","onChange","required","parseInt","placeholder","disabled"],"sources":["/root/dataflow-tracker/frontend/src/components/FlowEditor.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { uploadFlowConfig } from '../services/api';\n\nconst FlowEditor = () => {\n  const navigate = useNavigate();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [flowDefinition, setFlowDefinition] = useState('');\n  const [manualInput, setManualInput] = useState(false);\n  const [formData, setFormData] = useState({\n    flowName: '',\n    refreshInterval: 120,\n    databases: {\n      aws: {\n        host: '',\n        user: '',\n        password: '',\n        database: ''\n      },\n      oracle: {\n        host: '',\n        user: '',\n        password: '',\n        service: ''\n      }\n    },\n    flowDefinition: {\n      overall: '',\n      subStages: {}\n    },\n    stageMappings: {\n      aws: {},\n      onPrem: {}\n    }\n  });\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      setLoading(true);\n      \n      if (manualInput) {\n        // Submit manual input\n        const response = await uploadFlowConfig(formData);\n        if (response.status === 'success') {\n          toast.success(`Flow ${formData.flowName} created successfully`);\n          navigate(`/flows/${formData.flowName}`);\n        } else {\n          toast.error('Failed to create flow configuration');\n        }\n      } else if (file) {\n        // Submit file upload\n        const response = await uploadFlowConfig(file);\n        if (response.status === 'success') {\n          toast.success(response.message);\n          navigate('/');\n        } else {\n          toast.error('Failed to upload configuration');\n        }\n      } else {\n        toast.warning('Please select a file or provide manual input');\n      }\n    } catch (error) {\n      toast.error(`Error: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFormChange = (e, section, subsection = null) => {\n    const { name, value } = e.target;\n    \n    if (subsection) {\n      setFormData({\n        ...formData,\n        [section]: {\n          ...formData[section],\n          [subsection]: {\n            ...formData[section][subsection],\n            [name]: value\n          }\n        }\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [section]: {\n          ...formData[section],\n          [name]: value\n        }\n      });\n    }\n  };\n\n  const handleFlowDefinitionChange = (e) => {\n    setFlowDefinition(e.target.value);\n    \n    // Try to parse the flow definition\n    try {\n      const lines = e.target.value.split('\\n');\n      let overall = '';\n      const subStages = { AWS: {}, 'On-PREM': {} };\n      let currentSection = null;\n      let currentCategory = null;\n      \n      for (const line of lines) {\n        const trimmedLine = line.trim();\n        if (!trimmedLine) continue;\n        \n        if (trimmedLine.toLowerCase().startsWith('overall flow')) {\n          currentSection = 'overall';\n        } else if (trimmedLine.toLowerCase().startsWith('sub-stages')) {\n          currentSection = 'subStages';\n        } else if (currentSection === 'overall' && !overall) {\n          overall = trimmedLine;\n        } else if (currentSection === 'subStages') {\n          if (trimmedLine === 'AWS' || trimmedLine === 'On-PREM') {\n            currentCategory = trimmedLine;\n          } else if (currentCategory && trimmedLine === '{') {\n            // Opening bracket\n          } else if (currentCategory && trimmedLine === '}') {\n            // Closing bracket\n          } else if (currentCategory) {\n            // This is a stage definition\n            const parts = trimmedLine.split('{');\n            if (parts.length === 2) {\n              const stageName = parts[0].trim();\n              const stageContent = parts[1].replace('}', '').trim();\n              subStages[currentCategory][stageName] = stageContent;\n            }\n          }\n        }\n      }\n      \n      setFormData({\n        ...formData,\n        flowDefinition: {\n          overall,\n          subStages\n        }\n      });\n      \n    } catch (error) {\n      console.error('Error parsing flow definition:', error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-4\">\n      <h1 className=\"text-2xl font-bold mb-6\">Create New Flow Configuration</h1>\n      \n      <div className=\"mb-6\">\n        <div className=\"flex space-x-4 mb-4\">\n          <button\n            className={`px-4 py-2 rounded ${!manualInput ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n            onClick={() => setManualInput(false)}\n          >\n            Upload Configuration File\n          </button>\n          <button\n            className={`px-4 py-2 rounded ${manualInput ? 'bg-blue-500 text-white' : 'bg-gray-200'}`}\n            onClick={() => setManualInput(true)}\n          >\n            Manual Configuration\n          </button>\n        </div>\n        \n        <form onSubmit={handleSubmit}>\n          {!manualInput ? (\n            <div className=\"mb-4\">\n              <label className=\"block text-gray-700 mb-2\">\n                Upload JSON Configuration File\n              </label>\n              <input\n                type=\"file\"\n                accept=\".json\"\n                onChange={handleFileChange}\n                className=\"border rounded p-2 w-full\"\n              />\n              <p className=\"mt-2 text-sm text-gray-500\">\n                Upload a JSON file containing the flow configuration.\n              </p>\n            </div>\n          ) : (\n            <div>\n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 mb-2\">\n                  Flow Name\n                </label>\n                <input\n                  type=\"text\"\n                  value={formData.flowName}\n                  onChange={(e) => setFormData({...formData, flowName: e.target.value})}\n                  className=\"border rounded p-2 w-full\"\n                  required\n                />\n              </div>\n              \n              <div className=\"mb-4\">\n                <label className=\"block text-gray-700 mb-2\">\n                  Refresh Interval (seconds)\n                </label>\n                <input\n                  type=\"number\"\n                  value={formData.refreshInterval}\n                  onChange={(e) => setFormData({...formData, refreshInterval: parseInt(e.target.value)})}\n                  className=\"border rounded p-2 w-full\"\n                  required\n                />\n              </div>\n              \n              <div className=\"mb-6\">\n                <h2 className=\"text-lg font-semibold mb-3\">Database Connections</h2>\n                \n                <div className=\"bg-blue-50 p-4 rounded mb-4\">\n                  <h3 className=\"font-semibold mb-2\">AWS RDS</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Host</label>\n                      <input\n                        type=\"text\"\n                        name=\"host\"\n                        value={formData.databases.aws.host}\n                        onChange={(e) => handleFormChange(e, 'databases', 'aws')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">User</label>\n                      <input\n                        type=\"text\"\n                        name=\"user\"\n                        value={formData.databases.aws.user}\n                        onChange={(e) => handleFormChange(e, 'databases', 'aws')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Password</label>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={formData.databases.aws.password}\n                        onChange={(e) => handleFormChange(e, 'databases', 'aws')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Database</label>\n                      <input\n                        type=\"text\"\n                        name=\"database\"\n                        value={formData.databases.aws.database}\n                        onChange={(e) => handleFormChange(e, 'databases', 'aws')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded\">\n                  <h3 className=\"font-semibold mb-2\">Oracle</h3>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Host</label>\n                      <input\n                        type=\"text\"\n                        name=\"host\"\n                        value={formData.databases.oracle.host}\n                        onChange={(e) => handleFormChange(e, 'databases', 'oracle')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">User</label>\n                      <input\n                        type=\"text\"\n                        name=\"user\"\n                        value={formData.databases.oracle.user}\n                        onChange={(e) => handleFormChange(e, 'databases', 'oracle')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Password</label>\n                      <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={formData.databases.oracle.password}\n                        onChange={(e) => handleFormChange(e, 'databases', 'oracle')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                    <div>\n                      <label className=\"block text-gray-700 mb-1 text-sm\">Service</label>\n                      <input\n                        type=\"text\"\n                        name=\"service\"\n                        value={formData.databases.oracle.service}\n                        onChange={(e) => handleFormChange(e, 'databases', 'oracle')}\n                        className=\"border rounded p-2 w-full\"\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mb-6\">\n                <h2 className=\"text-lg font-semibold mb-3\">Flow Definition</h2>\n                <label className=\"block text-gray-700 mb-2\">\n                  Enter flow definition in the specified format\n                </label>\n                <textarea\n                  value={flowDefinition}\n                  onChange={handleFlowDefinitionChange}\n                  className=\"border rounded p-2 w-full h-64 font-mono\"\n                  placeholder=\"Overall flow\n\nAWS{Calculator_Runs->Cashflow_Generator->Translator_Runs->Intercompany_Runs} ->On-PREM{BPF->FINAL_STAGE}\n\nSub-stages\n\nAWS\n{\nCalculator_Runs {\nStage_1_1 -> Stage1_2->Stage1_3}\n...\n}\"\n                  required\n                />\n              </div>\n              \n              <div className=\"mb-6\">\n                <h2 className=\"text-lg font-semibold mb-3\">Stage Mappings</h2>\n                <p className=\"text-sm text-gray-600 mb-4\">\n                  For each stage, provide the corresponding database identifier.\n                </p>\n                \n                {/* This would be a dynamic form for stage mappings */}\n                <div className=\"bg-blue-50 p-4 rounded mb-4\">\n                  <h3 className=\"font-semibold mb-2\">AWS Stage Mappings</h3>\n                  <p className=\"text-sm text-gray-600 mb-2\">\n                    Map stage names to DAG IDs in the format: Stage_1_1: dag_id_1\n                  </p>\n                  <textarea\n                    className=\"border rounded p-2 w-full h-32 font-mono\"\n                    placeholder=\"Stage_1_1: calculator_stage_1_dag\nStage1_2: calculator_stage_2_dag\n...\"\n                  />\n                </div>\n                \n                <div className=\"bg-green-50 p-4 rounded\">\n                  <h3 className=\"font-semibold mb-2\">On-Prem Stage Mappings</h3>\n                  <p className=\"text-sm text-gray-600 mb-2\">\n                    Map stage names to BPF_ID and PROCESS_ID in the format: Stage5_1: 20010, 10\n                  </p>\n                  <textarea\n                    className=\"border rounded p-2 w-full h-32 font-mono\"\n                    placeholder=\"Stage5_1: 20010, 10\nStage5_2: 20007, 10\n...\"\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n          \n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={() => navigate('/')}\n              className=\"bg-gray-300 text-gray-800 px-4 py-2 rounded mr-2\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n              disabled={loading}\n            >\n              {loading ? 'Creating...' : 'Create Flow Configuration'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default FlowEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}